{"version":3,"sources":["components/Grid/Grid.js","App.js","reportWebVitals.js","index.js"],"names":["Grid","vImgs","vImgsSet","Set","imgNums","j","numJPGs","has","push","extension","imgs","i","className","src","placeholder","process","loading","style","filter","alt","shuffledImgs","map","x","shuffle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQA8DeA,MA1Df,WAYI,IAVA,IAKMC,EAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACnFC,EAAW,IAAIC,IAAIF,GAGrBG,EAAUH,EACNI,EAAI,EAAGA,EARCC,GAQYD,GAAG,EACtBH,EAASK,IAAIF,IACdD,EAAQI,KAAKH,GAOrB,IAFA,IACII,EADAC,EAAO,CAAC,GAAG,GAAG,IAETC,EAAE,EAAGA,EAjBEL,GAiBWK,GAAG,EAEtBF,EADAL,EAAQO,IApBA,GAqBI,MAGA,MAEhBD,EAAKC,EAAE,GAAGH,KACN,qBAAKI,UAAU,MAAf,SACI,cAAC,IAAD,CACIC,IAAG,mDAA8CT,EAAQO,GAAtD,YAA4DF,GAC/DK,YAAaC,WAAA,wBAA0CX,EAAQO,GAAlD,YAAwDF,GAFzE,SAGK,SAACI,EAAKG,GAAN,OACG,qBAAKC,MAAO,CAAEC,OAAQF,EAAU,YAAc,WAAaH,IAAKA,EAAKM,IAAI,mBAQ7F,IAAMC,EAAeV,EAAKW,KAAI,SAAAC,GAAC,OAAIC,IAAQD,MAC3C,OACI,sBAAKV,UAAU,OAAf,UACI,qBAAKA,UAAU,SAAf,SACKQ,EAAa,KAElB,qBAAKR,UAAU,SAAf,SACKQ,EAAa,KAElB,qBAAKR,UAAU,SAAf,SACKQ,EAAa,S,MC7CfI,MARf,WACE,OACE,qBAAKZ,UAAU,MAAf,SACE,cAAE,EAAF,OCMSa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d609e119.chunk.js","sourcesContent":["import './Grid.scss';\nimport ProgressiveImage from \"react-progressive-image\";\nimport shuffle from 'lodash/shuffle';\n\nfunction Grid() {\n    //hard-coded\n    const numJPGs = 62;\n    const numPNGs = 13;\n    const numImgs = numJPGs + numPNGs;\n\n    //list of vertical-orientation image indexes\n    const vImgs = [5,7,8,9,12,15,25,28,31,36,40,42,46,48,52,53,54,59,62,63,66,67,68,70,71,72,74];\n    const vImgsSet = new Set(vImgs)\n\n    //list of all image nums with vertical images first\n    let imgNums = vImgs;\n    for(let j = 0; j < numImgs; j+=1){\n        if (!vImgsSet.has(j)) {\n            imgNums.push(j)\n        }\n    }\n\n    // three-column display for desktop\n    let imgs = [[],[],[]]\n    let extension;\n    for (let i=0; i < numImgs; i+=1){\n        if (imgNums[i] >= numJPGs) {\n            extension = 'png';\n        }\n        else {\n            extension = 'jpg';\n        }\n        imgs[i%3].push(\n            <div className=\"pod\">\n                <ProgressiveImage \n                    src={`https://ethansitephotos.s3.amazonaws.com/${imgNums[i]}.${extension}`} \n                    placeholder={process.env.PUBLIC_URL + `/placeholders/${imgNums[i]}.${extension}`}>\n                    {(src, loading) => (\n                        <img style={{ filter: loading ? \"blur(5px)\" : \"blur(0)\" }} src={src} alt=\"projects\" />\n                    )}\n                </ProgressiveImage>\n            </div>\n        )\n    }\n\n    // shuffle the image order in each column\n    const shuffledImgs = imgs.map(x => shuffle(x))\n    return (\n        <div className=\"grid\">\n            <div className=\"column\">\n                {shuffledImgs[0]}\n            </div>\n            <div className=\"column\">\n                {shuffledImgs[1]}\n            </div>\n            <div className=\"column\">\n                {shuffledImgs[2]}\n            </div>\n        </div>\n    );\n}\n\nexport default Grid;\n","import Grid from './components/Grid/Grid';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      < Grid />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}